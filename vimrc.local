colorscheme hybrid
syntax enable

let &t_Co=256

set background=dark
set clipboard+=unnamedplus
set clipboard=unnamed           "use the system clipboard
set completefunc=emoji#complete "use emoji for user-defined completions
set relativenumber

"Shortcuts for managing vim configuration
nnoremap <leader>ev :vsplit ~/dotfiles-local/vimrc.local<cr>
nnoremap <leader>eb :vsplit ~/dotfiles-local/vimrc.bundles.local<cr>
nnoremap <leader>v :source $MYVIMRC<cr>

inoremap <C-c> <CR><esc>O

" Easy debugger placement
command! Pry :normal i require 'pry'<CR>binding.pry

" Faster plugin calls
nnoremap <leader>f :CtrlP<CR>
nnoremap <leader>>> :Tabularize /:\zs.*/<CR>
vnoremap <leader>>> :Tabularize /:\zs.*/<CR>

autocmd! BufWritePost * Neomake
let g:neomake_ruby_enabled_makers = ['rubocop']
let test#strategy = 'neovim'

" highlight trailing spaces in annoying red
highlight ExtraWhitespace ctermbg=1 guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

" remove trailing white space
autocmd BufWritePre * :%s/\s\+$//e

" Create missing directories in path when writing a new file
function s:Mkdir()
  let dir = expand('%:p:h')

  if !isdirectory(dir)
    call mkdir(dir, 'p')
    echo 'Created non-existing directory: '.dir
  endif
endfunction

autocmd BufWritePre * call s:Mkdir()
