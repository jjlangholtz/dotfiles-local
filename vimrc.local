"edit my local vimrc
nnoremap <leader>ev :vsplit ~/dotfiles-local/vimrc.local<cr>
nnoremap <leader>eb :vsplit ~/dotfiles-local/vimrc.bundles.local<cr>

"use rcup to source dotfiles
nnoremap <leader>d :!rcup -d ~/personal/dotfiles<cr>
nnoremap <leader>v :source $MYVIMRC<cr>

"strong H and L
noremap H 0
noremap L $

set relativenumber
let &t_Co=256

syntax enable

colorscheme hybrid
set background=dark

"delete line in insert mode
inoremap <c-d> <esc>ddO

"uppercase the current word
nnoremap <c-u> viwU<esc>
inoremap <c-u> <esc>viwUA

"rename current file, via Gary Bernhardt
function! RenameFile()
  let old_name = expand('%')
  let new_name = input('New file name: ', expand('%'))
  if new_name != '' && new_name != old_name
    exec ':saveas ' . new_name
    exec ':silent !rm ' . old_name
    redraw!
  endif
endfunction
map <leader>n :call RenameFile()<cr>

command! TIL tabe ~/Document/TIL.md

" Easy debugger placement
command! Pry :normal i require 'pry'<CR>binding.pry

" Simple re-format for minified Javascript
command! UnMinify call UnMinify()
function! UnMinify()
    %s/{\ze[^\r\n]/{\r/g
    %s/){/) {/g
    %s/};\?\ze[^\r\n]/\0\r/g
    %s/;\ze[^\r\n]/;\r/g
    %s/[^\s]\zs[=&|]\+\ze[^\s]/ \0 /g
    normal ggVG=
endfunction

set clipboard=unnamed "use the system clipboard

inoremap <C-c> <CR><esc>O
inoremap <C-l> <esc>GA

" Seeing is believing
let g:xmpfilter_cmd = "seeing_is_believing"

" Tabularize mappings
nnoremap <leader>>> :Tabularize /:\zs.*/<CR>
vnoremap <leader>>> :Tabularize /:\zs.*/<CR>

" Leader key for fuzzy find
nnoremap <leader>f :CtrlP<CR>

" Get rid of handlebars incorrect syntax errors
let g:syntastic_filetype_map = { 'html.handlebars': 'handlebars' }

" Tell syntastic to use eslint
let g:syntastic_javascript_checkers = ['eslint']

autocmd! BufWritePost *.rb Neomake
let g:neomake_ruby_enabled_makers = ['rubocop']

" highlight trailing spaces in annoying red
highlight ExtraWhitespace ctermbg=1 guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

" ctags leader
map <leader>rt :!ctags -R --languages=ruby --exclude=.git --exclude=log . $(bundle list --paths)<cr>

" remove trailing white space
autocmd BufWritePre * :%s/\s\+$//e
